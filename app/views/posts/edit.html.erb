<div class="post-edit">
  <div class="container pt-5">
    <h1 class="pt-5 pb-1">投稿を編集する</h1>
    <div class="form_group mt-5 pl-5">
      <%= form_with model: @post, url: { controller: 'posts', action: 'update' }, local: true do |f| %>
        <div class="form-row pb-4">
          <%= f.label :見つけた生き物, class: "pr-2" %>
          <%= f.text_field :found_animal %>
        </div>
        <div class="form-row pb-4">
          <%= f.label :ジャンル, class: "pr-5" %>
          <%= f.collection_select(:category_id, Category.all, :id, :category) %>
        </div>      
        <div class="form-row pb-4">
          <%= f.label :発見場所, class: "pr-5" %>
          <%= f.collection_select(:prefecture_id, Prefecture.all, :id, :prefecture) %>
        </div>
        <% if @post.latitude && @post.longitude %>
          <div id='gmap-for-edit'></div>
          <%= f.hidden_field :latitude, {id: "target_latitude_edit"} %>
          <%= f.hidden_field :longitude, {id: "target_longitude_edit"} %>
        <% end %>
        <div class="form-row pb-4">
          <%= f.label :発見年／月, class: "pr-4" %>
          <%= f.date_select(:found_date, date_separator: "/", discard_day: true) %>
        </div>
        <div class="form-row pb-4">
          <%= f.label :コメント, class: "pr-5" %>
          <%= f.text_area :content, size: "30x5" %>
        </div>
        <div class="form-row pb-2 mb-0">
          <%= f.label :新しい画像を選択する, class: "pr-2" %>
          <%= f.file_field :image, value: @post.image %>
          <%= f.hidden_field :image_cache %>
        </div>
        <span><small>新しい画像を選択しない場合、記事の画像は変更されません</small></span>
        <div class="form-row pt-4">
          <p><label><%= f.check_box :remove_image %>記事の画像を削除する</label></p>
        </div>
        <div class="form-row pb-4 mb-0">
          <%= f.label :タグ, class: "mr-3" %>
          <%= f.text_field :tag_name, value: @tag_list %>
        </div>
          <%= f.submit "更新する", class: "btn btn-success px-4" %>
      <% end %>
    </div>
  </div>
</div>

<script>
let map;
function initMap(){
  map = new google.maps.Map(document.getElementById('gmap-for-edit'), {
    center: {lat:<%= @post.latitude %>, lng:<%= @post.longitude %>},
    zoom: 12,
  });

  let marker = new google.maps.Marker({
    position: map.getCenter(),
    map: map
  });
  marker.setDraggable(true);
  google.maps.event.addListener(marker, 'dragend', function(e) {
    document.getElementById("target_latitude_edit").value = e.latLng.lat(),
    document.getElementById("target_longitude_edit").value = e.latLng.lng()
  });
}
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCwf221uzw_nqcoGVja1gAaxh3iKfdq8ec&callback=initMap" async defer></script>